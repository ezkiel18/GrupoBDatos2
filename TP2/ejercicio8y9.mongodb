use ('empresa');
db.dropDatabase();
const cursoId1 = ObjectId()
const cursoId2 = ObjectId()
const cursoId3 = ObjectId()
db.cursos.insertMany([
  {_id:cursoId1, nombre: "Matematica"},
  {_id:cursoId2, nombre: "Historia", },
  {_id:cursoId3, nombre: "Arte", }
]);

db.alumnos.insertMany([
  {curso_id:cursoId1, nombre: "Juan", apellido:"Ramirez"},
  {curso_id:cursoId2, nombre: "Pedro", apellido:"Fernandez"},
  {curso_id:cursoId3, nombre: "Jorge", apellido:"Morales"}
]);

const resultado = db.cursos.aggregate([
  {
    $lookup: {
      from: "alumnos",
      localField: "_id",
      foreignField: "curso_id",
      as: "alumnos"
    }
  }
])
resultado.forEach(printjson)

//EJERCICIO 9

//El replicaset crea copias de los datos en múltiples servidores
// (estos otros servidores son identicos al original), 
//si uno falla otro toma su lugar lo que permite seguir 
// teniendo acceso a los datos y a la base de datos, 
//evitando interrupciones.

//El sharding divide la base de datos en partes mas pequeñas que se 
// pueden distribuir en distintos servidores,
//haciendo que mejora la capacidad de almacenamiento, 
// si uno falla los demas siguen funcionando, hace que el
//rendimiento mejore al evitar un cuello de botella.

